{"ast":null,"code":"import _objectSpread from \"/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/src/doggoComponents/AddUserForm.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nconst AddUserForm = props => {\n  const initialFormState = {\n    id: null,\n    name: '',\n    age: '',\n    description: '',\n    doggo_id: ''\n  };\n\n  const _useForm = useForm(),\n        handleSubmit = _useForm.handleSubmit,\n        register = _useForm.register,\n        errors = _useForm.errors;\n\n  const _useState = useState(initialFormState),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const handleInputChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUser(_objectSpread({}, user, {\n      [name]: value\n    }));\n  };\n\n  const onSubmit = event => {\n    //event.preventDefault ();\n    if (!user.name || !user.age || !user.description || !user.doggo_id) return;\n    props.addUser(user);\n    alert(user.name + ' has succesfully been registered');\n    setUser(initialFormState);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reg-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Add Doggo registration\"), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: user.name,\n    onChange: handleInputChange,\n    ref: register({\n      required: 'Name is required'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"has-text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, errors.name && errors.name.message)), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    className: \"input\",\n    placeholder: \"Age\",\n    name: \"age\",\n    value: user.age,\n    onChange: handleInputChange,\n    ref: register({\n      required: 'Age is required',\n      min: 0,\n      max: 100\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"has-text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, errors.age && errors.age.message)), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Description\",\n    name: \"description\",\n    value: user.description,\n    onChange: handleInputChange,\n    ref: register({\n      required: 'Description is required, up to 100 letters',\n      maxLength: 100\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"has-text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, errors.description && errors.description.message)), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Doggo id\",\n    name: \"doggo_id\",\n    value: user.doggo_id,\n    onChange: handleInputChange,\n    ref: register({\n      required: 'Doggo ID is required',\n      pattern: {\n        value: /(J)(\\d{6})([a-d])/g,\n        message: 'Invalid id format, starts with capital letter J, followed by any 6 digits number, and ends with any lowercase letter from a to d'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"has-text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, errors.doggo_id && errors.doggo_id.message)), React.createElement(\"button\", {\n    className: \"button is-primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default AddUserForm;","map":{"version":3,"sources":["/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/src/doggoComponents/AddUserForm.js"],"names":["React","useState","useForm","AddUserForm","props","initialFormState","id","name","age","description","doggo_id","handleSubmit","register","errors","user","setUser","handleInputChange","event","target","value","onSubmit","addUser","alert","required","message","min","max","maxLength","pattern"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useForm} from 'react-hook-form';\n\nconst AddUserForm = props => {\n  const initialFormState = {\n    id: null,\n    name: '',\n    age: '',\n    description: '',\n    doggo_id: '',\n  };\n  \n  const {handleSubmit, register, errors} = useForm ();\n  const [user, setUser] = useState (initialFormState);\n\n  const handleInputChange = event => {\n    const {name, value} = event.target;\n\n    setUser ({...user, [name]: value});\n  };\n\n  const onSubmit = event => {\n    //event.preventDefault ();\n    if (!user.name || !user.age || !user.description || !user.doggo_id) return;\n    props.addUser (user);\n    alert (user.name + ' has succesfully been registered');\n    setUser (initialFormState);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"reg-container\">\n        <form onSubmit={handleSubmit (onSubmit)}>\n          <p>Add Doggo registration</p>\n          <div className=\"column\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Name\"\n              name=\"name\"\n              value={user.name}\n              onChange={handleInputChange}\n              ref={register ({\n                required: 'Name is required',\n              })}\n            />\n            <p className=\"has-text-danger\">\n              {errors.name && errors.name.message}\n            </p>\n          </div>\n\n          <div className=\"column\">\n            <input\n              type=\"number\"\n              className=\"input\"\n              placeholder=\"Age\"\n              name=\"age\"\n              value={user.age}\n              onChange={handleInputChange}\n              ref={register ({\n                required: 'Age is required',\n                min: 0,\n                max: 100,\n              })}\n            />\n            <p className=\"has-text-danger\">\n              {errors.age && errors.age.message}\n            </p>\n          </div>\n\n          <div className=\"column\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Description\"\n              name=\"description\"\n              value={user.description}\n              onChange={handleInputChange}\n              ref={register ({\n                required: 'Description is required, up to 100 letters',\n                maxLength: 100,\n              })}\n            />\n            <p className=\"has-text-danger\">\n              {errors.description && errors.description.message}\n            </p>\n          </div>\n\n          <div className=\"column\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Doggo id\"\n              name=\"doggo_id\"\n              value={user.doggo_id}\n              onChange={handleInputChange}\n              ref={register ({\n                required: 'Doggo ID is required',\n                pattern: {\n                  value: /(J)(\\d{6})([a-d])/g,\n                  message: 'Invalid id format, starts with capital letter J, followed by any 6 digits number, and ends with any lowercase letter from a to d',\n                },\n              })}\n            />\n            <p className=\"has-text-danger\">\n              {errors.doggo_id && errors.doggo_id.message}\n            </p>\n          </div>\n\n          <button className=\"button is-primary\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddUserForm;\n"]},"metadata":{},"sourceType":"module"}