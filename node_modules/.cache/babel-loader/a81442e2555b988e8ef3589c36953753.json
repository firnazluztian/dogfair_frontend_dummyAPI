{"ast":null,"code":"var _jsxFileName = \"/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/src/components/Registration.js\";\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n\nfunction Registration(props) {\n  const _useForm = useForm(),\n        handleSubmit = _useForm.handleSubmit,\n        register = _useForm.register,\n        errors = _useForm.errors;\n\n  const history = useHistory();\n\n  const onSubmit = values => {\n    console.log(values);\n    alert('succesfully registered');\n    history.push('/');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reg-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Doggo Registration\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Name\",\n    name: \"name\",\n    ref: register({\n      required: 'Name is required'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"has-text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, errors.name && errors.name.message)), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    className: \"input\",\n    placeholder: \"Age\",\n    name: \"age\",\n    ref: register({\n      required: 'Age is required',\n      min: 0,\n      max: 100,\n      pattern: {\n        value: '[0-1]{1}[0-9]{0,2}',\n        message: 'must be within 0-100'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"has-text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, errors.age && errors.age.message)), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Description\",\n    name: \"description\",\n    ref: register({\n      required: 'Description is required, up to 100 letters',\n      maxLength: 100\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"has-text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, errors.description && errors.description.message)), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Doggo id\",\n    name: \"doggoID\",\n    ref: register({\n      required: 'Doggo ID is required',\n      pattern: {\n        value: /(J)(\\d{6})([a-d])/g,\n        message: 'Invalid id format, starts with capital letter J, followed by any 6 digits number, and ends with any lowercase letter from a to d'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"has-text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, errors.doggoID && errors.doggoID.message)), React.createElement(\"button\", {\n    className: \"button is-primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Submit\"))));\n}\n\nexport default Registration;","map":{"version":3,"sources":["/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/src/components/Registration.js"],"names":["React","useHistory","useForm","Registration","props","handleSubmit","register","errors","history","onSubmit","values","console","log","alert","push","required","name","message","min","max","pattern","value","age","maxLength","description","doggoID"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useForm} from 'react-hook-form';\n\nfunction Registration (props) {\n  const {handleSubmit, register, errors} = useForm ();\n  const history = useHistory ();\n\n  const onSubmit = values => {\n    console.log (values);\n    alert ('succesfully registered');\n    history.push ('/');\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"reg-container\">\n        <p>Doggo Registration</p>\n        <form onSubmit={handleSubmit (onSubmit)}>\n\n          <div className=\"column\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Name\"\n              name=\"name\"\n              ref={register ({\n                required: 'Name is required',\n              })}\n            />\n            <p className=\"has-text-danger\">\n              {errors.name && errors.name.message}\n            </p>\n          </div>\n\n          <div className=\"column\">\n            <input\n              type=\"number\"\n              className=\"input\"\n              placeholder=\"Age\"\n              name=\"age\"\n              ref={register ({\n                required: 'Age is required',\n                min: 0,\n                max: 100,\n                pattern: {\n                  value: '[0-1]{1}[0-9]{0,2}',\n                  message: 'must be within 0-100'\n                }\n              })}\n            />\n            <p className=\"has-text-danger\">\n              {errors.age && errors.age.message}\n            </p>\n          </div>\n\n          <div className=\"column\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Description\"\n              name=\"description\"\n              ref={register ({\n                required: 'Description is required, up to 100 letters',\n                maxLength: 100,\n              })}\n            />\n            <p className=\"has-text-danger\">\n              {errors.description && errors.description.message}\n            </p>\n          </div>\n\n          <div className=\"column\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Doggo id\"\n              name=\"doggoID\"\n              ref={register ({\n                required: 'Doggo ID is required',\n                pattern: {\n                  value: /(J)(\\d{6})([a-d])/g,\n                  message: 'Invalid id format, starts with capital letter J, followed by any 6 digits number, and ends with any lowercase letter from a to d',\n                },\n              })}\n            />\n            <p className=\"has-text-danger\">\n              {errors.doggoID && errors.doggoID.message}\n            </p>\n          </div>\n\n          <button className=\"button is-primary\" type=\"submit\">Submit</button>\n\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}