{"ast":null,"code":"import _objectSpread from \"/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/src/forms/EditUserForm.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst EditUserForm = props => {\n  const _useState = useState(props.currentUser),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  useEffect(() => {\n    setUser(props.currentUser);\n  }, [props]); // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUser(_objectSpread({}, user, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reg-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      props.updateUser(user.id, user);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Edit doggo registration\"), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: user.name,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: user.username,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Update user\"), React.createElement(\"button\", {\n    onClick: () => props.setEditing(false),\n    className: \"button muted-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default EditUserForm;","map":{"version":3,"sources":["/Users/firnazluztian/Documents/react/Oromico/milestone_1 copy/dogfair_frontend/src/forms/EditUserForm.js"],"names":["React","useState","useEffect","EditUserForm","props","currentUser","user","setUser","handleInputChange","event","target","name","value","preventDefault","updateUser","id","username","setEditing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,oBACJH,QAAQ,CAAEG,KAAK,CAACC,WAAR,CADJ;AAAA;AAAA,QACrBC,IADqB;AAAA,QACfC,OADe;;AAG5BL,EAAAA,SAAS,CACP,MAAM;AACJK,IAAAA,OAAO,CAAEH,KAAK,CAACC,WAAR,CAAP;AACD,GAHM,EAIP,CAACD,KAAD,CAJO,CAAT,CAH4B,CAS5B;;AAEA,QAAMI,iBAAiB,GAAGC,KAAK,IAAI;AAAA,0BACXA,KAAK,CAACC,MADK;AAAA,UAC1BC,IAD0B,iBAC1BA,IAD0B;AAAA,UACpBC,KADoB,iBACpBA,KADoB;AAGjCL,IAAAA,OAAO,mBAAMD,IAAN;AAAY,OAACK,IAAD,GAAQC;AAApB,OAAP;AACD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEH,KAAK,IAAI;AACjBA,MAAAA,KAAK,CAACI,cAAN;AAEAT,MAAAA,KAAK,CAACU,UAAN,CAAkBR,IAAI,CAACS,EAAvB,EAA2BT,IAA3B;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAPF,EAQE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEA,IAAI,CAACK,IAHd;AAIE,IAAA,QAAQ,EAAEH,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,EAiBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEF,IAAI,CAACU,QAHd;AAIE,IAAA,QAAQ,EAAER,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1BF,EA2BE;AACE,IAAA,OAAO,EAAE,MAAMJ,KAAK,CAACa,UAAN,CAAkB,KAAlB,CADjB;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF,CADF,CADF,CADF;AAyCD,CA1DD;;AA4DA,eAAed,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst EditUserForm = props => {\n  const [user, setUser] = useState (props.currentUser);\n\n  useEffect (\n    () => {\n      setUser (props.currentUser);\n    },\n    [props]\n  );\n  // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const {name, value} = event.target;\n\n    setUser ({...user, [name]: value});\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"reg-container\">\n        <form\n          onSubmit={event => {\n            event.preventDefault ();\n\n            props.updateUser (user.id, user);\n          }}\n        >\n          <p>Edit doggo registration</p>\n          <div className=\"column\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={user.name}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"column\">\n            <label>Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={user.username}\n              onChange={handleInputChange}\n            />\n          </div>\n          <button>Update user</button>\n          <button\n            onClick={() => props.setEditing (false)}\n            className=\"button muted-button\"\n          >\n            Cancel\n          </button>\n        </form>\n      </div>\n\n    </div>\n  );\n};\n\nexport default EditUserForm;\n"]},"metadata":{},"sourceType":"module"}